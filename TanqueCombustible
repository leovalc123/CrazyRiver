package crazyriverride;

import java.util.Random;

/**
 *
 * @author jeja
 */
public class TanqueCombustible {
    
    private int combustible;
    private int x, y;
    
    /**
     * Metodo constructor de TanqueCombustible
     */
    public TanqueCombustible(){
        Random random = new Random();
        //La vida aleatoria con una media de 50
        this.combustible = (int) (50 + 2*random.nextGaussian());
        int posicion = random.nextInt(5) + 1;
        y = 0;
        switch(posicion){
            case 1:
                x = 357;
                break;
            case 2:
                x = 425;
                break;
            case 3:
                x = 371;
                break;
            case 4:
                x = 270;
                break;
            case 5:
                x = 231;
                break;
        }//Fin del switch
    }//Fin del constructor
    
    /**
     * Metodo sube o baja la cantidad de combustible
     * @param cant (cant positivo suma y negativo resta)
     */
    public void setCombustible(int cant){
        this.combustible += cant;
    }//Fin de setCombustible
    
    /**
     * Devuelve el combustible del tanque
     * @return combustible
     */
    public int getCombustible(){
        return combustible;
    }//Fin de getCombustible
    
    /**
     * Metodo define la posicion en x
     * @param x 
     */
    public void setPosX(int x){
        this.x = x;
    }//Fin de setPosX
    
    /**
     * Metodo devuelve la posicion en x
     * @return x
     */
    public int getPosX (){
        return x;
    }//Fin de getPosX
    
    /**
     * Metodo define la posicion en y
     * @param y 
     */
    public void setPosY(int y){
        this.y = y;
    }//Fin de setPosY
    
    /**
     * Metodo devuelve la posicion en y 
     * @return y
     */
    public int getPosY (){
        return y;
    }//Fin de getPosY
    
    /**
     * Metodo imprime el tanque combustible
     */
    public void printtanque(){
        System.out.println("Comb: " + this.combustible);
    }
}
